<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pic_Picture.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHgAAACgCAIAAABIaz/HAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAABIJJREFUeF7tmNtt3DAUBVOXC3I9qcbNpBiHlCiJ7+VutBMYmPlakYeXlyMaBvTr
        WxAUDaFoCEVDKBpC0RCKhlA0hKIhFA2haAhFQygaQtEQioZQNISiIRQNoWgIRUMoGkLREIqGUDSEoiEU
        DaFoCEVDKBpC0RCKhlA0hKIhFA2haAhFQygaQtEQioZQNISiIRQNoWgIRUMoGkLREIqGUDSEoiEUDaFo
        CEVDKBpC0RCKhlA0hKIhFA3xhOivz1+fX+l3JDzXfPz+s08UwUgTbhINnfqReuFiLPLn90d9gsdtRKrg
        6DCzehPR9bJRmbr9NhgG9ldwERaNm9qZtf2Acml4aokN1TvEpnLOySo4KV/Uy7lBdBgvNTbBJnGn6BDr
        sbh0HMsnq2D5eD3N6v2z6HQL8pleMIyVDDs6aZbs1Av7bTVkt/WMT5duk9eqPFiuu55m9cai4x7FPeyV
        SaEwlc3N9rufuHeHovXiLFez00bzySpYPsZ6J8N6Q9Ght8/PfsGj5W0gBbZXn35nfWzDUwohiddWVefP
        CPWKBUewPlG971mtqnyuO0iTwwYCA9FHa/nSzm5F2djmNjDb706W38dEdH2CIpdvsXKi2cF7oguF18Os
        TEETjDU6PK5Wq6w0LBPrnGvHJ2pFJxaPPou1okO62i2NdMv0Bmf7nTwOhUTVyea9WlW/i4O6eJY7p+oe
        nhHdy87ONP5n2NAtM6t9EkI95gu7px6qKFnqqo1lL2Pn2KtTb7GTE0r0yrkrwqqFG91lccPlvjrB/yC6
        S5FcCvWor9jq0RYNLsa6web2J0YFnxAt/4KiIRQNoWgIRUMoGkLREIqGUDSEoiEUDXGH6MGnjM4HoZz0
        UaD/GSFbmwJlbrBlZPSxYWcv8+wXoRt4141+cJRLWylwY0F0RnyDs6161brdhamc/m4vc4PoqsGTp0VH
        ZRWhRgpkuZxN2dfsrS6J3rYu6ofg8sfCFbAbvR0lJx1rIPBiLDp3Ecv3vZSd7GXq7sJouziWnLf2DG8U
        XTbZDCRqgdHeThpOgTwXFVyBkzRcKUu+0mRgf/hZoq/uR5z9h2i360J0frbjd0f0M0SHH9fWe5lQuxS7
        HaSoH4KDP5HXeNeNbtiOUtEILB6SjXjinULEGnuNzOtAdKBp8IXtJtwh+lJR8JqXc9nxO8m/3kFjpOGQ
        ePkMq/dfU9HH1oFru5t4143uNRrGuhTBK5SGU6XxyUczYTyzmdzu4R8qOjTVY63RhydKgXHuKSd7OBMd
        fqZ+RzSv5CVuEr1+0pqHi1NgnHtq+z3cu9Fv5o03eu34DzWlwDj3sELOHv6homUBRUMoGkLREIqGUDSE
        oiEUDaFoCEVDKBpC0RCKhlA0hKIhFA2haAhFQygaQtEQioZQNISiIRQNoWgIRUMoGkLREIqGUDSEoiEU
        DaFoCEVDKBpC0RCKhlA0hKIhFA2haAhFQygaQtEQioZQNISiIRQNoWgIRUMoGkLREIqGUDSEoiEUDaFo
        CEVDKBpC0RCKhlA0hKIhFA2haAhFQyga4fv7L8zblz9HT9j1AAAAAElFTkSuQmCC
</value>
  </data>
</root>